name: Build and Test Subversion
on:
  push:
    branches: ["*"]
  workflow_dispatch:
    inputs:
      url:
        default: https://svn.apache.org/repos/asf/subversion/trunk
        type: string
        description: URL to checkout Subvesion from
      revision:
        default: HEAD
        type: string
        description: Revision to checkout Subvesion from

env:
  URL: ${{ inputs.url }}
  REVISION: ${{ inputs.revision }}

jobs:
  linux-make:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout svn-ci
        uses: actions/checkout@v4
        with:
          path: svn-ci

      - name: Checkout Subversion
        run: ./svn-ci/scripts/Get-SvnSource.ps1

      - name: Install dependecies
        run: |
          sudo apt-get install `
            libtool `
            libtool-bin `
            libapr1-dev `
            libaprutil1-dev `
            libexpat1-dev `
            zlib1g-dev `
            libsqlite3-dev

      - name: autogen.sh
        working-directory: ./svn
        run: sh ./autogen.sh

      - name: configure
        working-directory: ./svn
        run: |
          ./configure `
            --with-utf8proc=internal `
            --with-lz4=internal

      - name: Build
        working-directory: ./svn
        run: make -j

      - name: Test
        working-directory: ./svn
        run: make check

  windows-vcnet:
    runs-on: windows-latest

    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
      - name: Checkout svn-ci
        uses: actions/checkout@v4
        with:
          path: svn-ci

      - name: Checkout Subversion
        run: ./svn-ci/scripts/Get-SvnSource.ps1
  
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
              core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
              core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install dependecies
        run: |
          C:\vcpkg\vcpkg.exe `
            install apr apr-util expat zlib `
            --overlay-triplets ./svn-ci/triplets `
            --triplet x64-svn-windows

      - name: Download and extract sqlite amalgamation
        run: ./svn-ci/scripts/Get-SQLite.ps1

      - name: gen-make
        working-directory: svn
        run: |
          $deps = "C:\vcpkg\installed\x64-svn-windows"
          python ./gen-make.py `
            -t vcproj --vsnet-version=2019 `
            --with-apr=$deps `
            --with-apr-util=$deps `
            --with-zlib=$deps `
            --with-sqlite=../sqlite-amalgamation-3460000

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Build
        run: |
           MSBuild.exe .\svn\subversion_vcnet.sln `
            /t:__ALL_TESTS__ `
            /p:Platform=x64 `
            /v:minimal

      - name: Test
        working-directory: svn
        run: |
          python ./win-tests.py --parallel

  cmake:
    strategy:
      matrix:
        include:
          - os: windows-latest
            build_shared: ON
            vcpkg_triplet: x64-svn-windows
            cc: cl
            cxx: cl
          - os: windows-latest
            build_shared: OFF
            vcpkg_triplet: x64-svn-windows
            cc: cl
            cxx: cl

    runs-on: ${{ matrix.os }}

    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
      - name: Checkout svn-ci
        uses: actions/checkout@v4
        with:
          path: svn-ci

      - name: Checkout Subversion
        run: ./svn-ci/scripts/Get-SvnSource.ps1

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
              core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
              core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install dependecies
        run: |
          C:\vcpkg\vcpkg.exe `
            install apr apr-util expat zlib `
            --overlay-triplets ./svn-ci/triplets `
            --triplet ${{ matrix.vcpkg_triplet }}

      - name: Download and extract sqlite amalgamation
        run: ./svn-ci/scripts/Get-SQLite.ps1

      - name: gen-make
        working-directory: svn
        run: python ./gen-make.py -t cmake

      - name: Configure CMake
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
        run: |
          $root = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          Import-Module "$root\Common7\Tools\Microsoft.VisualStudio.DevShell.dll"
          Enter-VsDevShell -VsInstallPath $root -DevCmdArguments "-arch=x64 -host_arch=x64"

          Set-Location ${{ github.workspace }}\svn

          cmake -B out -G Ninja `
            -DCMAKE_PREFIX_PATH=C:\vcpkg\installed\${{ matrix.vcpkg_triplet }} `
            -DSVN_SQLITE_AMALGAMATION_ROOT=${{ github.workspace }}/sqlite-amalgamation-3460000 `
            -DBUILD_SHARED_LIBS=${{ matrix.build_shared }}

      - name: Build CMake
        working-directory: svn
        run: cmake --build out
